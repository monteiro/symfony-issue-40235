security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
    providers:
        users_in_memory:
          memory:
              users: 
                  john_admin: { password: '123456', roles: [ 'ROLE_ADMIN' ] }
                  john_user: { password: '123456', roles: [ 'ROLE_USER' ] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/          
            http_basic:
                realm: 'Secured API'
                provider: users_in_memory
            guard: false

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:          
        - # this line mistake makes the normal user able to access the /admin route 
        - { path: ^/admin, roles: ROLE_ADMIN }
